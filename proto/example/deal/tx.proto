syntax = "proto3";
package example.deal;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "example/deal/params.proto";

option go_package = "example/x/deal/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  rpc CreateDeal(MsgCreateDeal) returns (MsgCreateDealResponse);
  rpc CreateContract(MsgCreateContract) returns (MsgCreateContractResponse);
  rpc CommitContract(MsgCommitContract) returns (MsgCommitContractResponse);
  rpc ApproveContract(MsgApproveContract) returns (MsgApproveContractResponse);
  rpc ShipOrder(MsgShipOrder) returns (MsgShipOrderResponse);
  rpc OrderDelivered(MsgOrderDelivered) returns (MsgOrderDeliveredResponse);
  rpc CancelOrder(MsgCancelOrder) returns (MsgCancelOrderResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "example/x/deal/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateDeal {
  option (cosmos.msg.v1.signer) = "signer";
  string signer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string creator = 2;
  string vendor = 3;
  uint64 commission = 4;
}

message MsgCreateDealResponse {
  string idValue = 1;
}

message MsgCreateContract {
  option (cosmos.msg.v1.signer) = "signer";
  string signer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string creator = 2;
  string dealId = 3;
  string consumer =4;
  string desc = 5;
  string ownerETA = 6;
  string expiry = 7;
  uint64 fees = 8;
}

message MsgCreateContractResponse {
  string idValue = 1;
  string contractStatus = 2;
}

message MsgCommitContract {
  option (cosmos.msg.v1.signer) = "signer";
  string signer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string creator = 2;
  string dealId = 3;
  string contractId = 4;
  string vendorETA = 5;
}

message MsgCommitContractResponse {
  string idValue = 1;
  string contractStatus = 2;
}

message MsgApproveContract {
  option (cosmos.msg.v1.signer) = "signer";
  string signer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string creator = 2;
  string dealId = 3;
  string contractId = 4;
}

message MsgApproveContractResponse {
  string idValue = 1;
  string contractStatus = 2;
}

message MsgShipOrder {
  option (cosmos.msg.v1.signer) = "signer";
  string signer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string creator = 2;
  string dealId = 3;
  string contractId = 4;
}

message MsgShipOrderResponse {
  string idValue = 1;
  string contractStatus = 2;
}

message MsgOrderDelivered {
  option (cosmos.msg.v1.signer) = "signer";
  string signer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string creator = 2;
  string dealId = 3;
  string contractId = 4;
}

message MsgOrderDeliveredResponse {
  string idValue = 1;
  string contractStatus = 2;
}

message MsgCancelOrder {
  option (cosmos.msg.v1.signer) = "signer";
  string signer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string creator = 2;
  string dealId = 3;
  string contractId = 4;
}

message MsgCancelOrderResponse {
  string idValue = 1;
  string contractStatus = 2;
}